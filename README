README 

This is a work-in-progress rebase and rework on EXNS_EAS for Marlin.

The current status is as follows;

- all patchwork dating back to the exns 8.1 rebase (DEC. 2017) has been applied over this tree. the patchwork 
  is squashed into less than 300 commits (but amounts to almost 4000 actual commits and roughly 1 1/2+ yrs of work.)
  
  do to the shear amount of code changes and complexity, i decided to pull in everything, then start 
  fixing and/or rolling back changsets, after. * Only the last month or so of commit history is retained, including what 
  ever changes were done post-rebasing the kernel (fixing breakage + rolling back changes). commit history can be 
  found in my deprecated repositories... history going back that far, really isn't useful to me at all.
  
  Now that the basic rebase is down, I've gone ahead and started rolling back other changesets - this is for 
  a variety of reasons. e.g: ditch downstream changes that have broke or become buggy because related code has been
  updated / reworked recently... to make porting code easier... to avoid complexity and possible sources of issues... 
  to align various parts of the kernel closer to mainline...

- as far as stability; not Sealy ready for primetime yet. although, i am running it on my device; there are a few 
  unresolved issues, although the rebase + some rollbacks have cured a few different bugs/issues. there's no real point 
  in outlining the current bugs (they can be resolved and/or change weekly)...

current porting status/goals;

- locking is almost the same as mainline (4.19), but there are still some tricky changes to pull in (working on it,
  got some valuable insight/an idea from the linux ARM maintainer on how to resolve my current blocker).
  
  included here, would be things like; dropping the lglock code, replacing it with percpurwsems. dropping arm64's 
  homebrew ticketed spinlock code, switching to using qrwlocks, qspinlocks, etc. etc, etc, etc..

- RCU is almost sync'd to 4.9, minus CPU hotplug state machine changes and a few related bits. the remaining bits are 
  tricky, but i may be able to workaround it or i could probably update the CPU hotplug implementation and then just pull
  the remaining RCU code, without modification.
  
- CPU hotplug currently matches linux-4.4, this was done to clean up the code, drop the lglock and also to give me the 
  option of pulling in tglx's CPU hotplug state machine rework (introduced in linux-4.6).
  
- workqueues, swait, etc are close to mainline.

- TTY and MSM specific TTY drivers are similar to linux-4.9

- mm subsystem is a mixed bag of code ranging from 3.18 -> 4.6+. unless, i get motivated and pull in cgroup-writeback 
  support. parts of MM and also the block, fs subsystems are near impossible to update, beyond the work I've already 
  done.

- many other parts of thec ore kernel have been updated significantly. (an ongoing effort).

- currently, the scheduler is lagging behind and needs a big rework (although, i have started). Walt, pelt, etc all 
  need to be updated (to match 4.9 android kernels). the remaining upstream chunks need to be pulled in and a few fix 
  ups to backports need to happen, as well...
  
  so scheduler code has issues, until i fix it all. 
  
- drivers are modified when needed (due to upstream/porting changes)...
